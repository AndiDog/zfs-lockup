variables:
  iso_checksum_type: sha256
  iso_checksum_url: http://ftp.freebsd.org/pub/FreeBSD/releases/ISO-IMAGES/11.2/CHECKSUM.SHA256-FreeBSD-11.2-RELEASE-amd64
  iso_url: http://ftp.freebsd.org/pub/FreeBSD/releases/ISO-IMAGES/11.2/FreeBSD-11.2-RELEASE-amd64-disc1.iso

builders:
  - type: amazon-ebssurrogate

    # Replace these with yours BEGIN

    source_ami: ami-2b97a8c0 # AMI for 11.2 in eu-central-1 (sorry, wasted too much time getting `source_ami_filter` to work)
    region: eu-central-1
    availability_zone: eu-central-1b
    subnet_id: subnet-fffeec85
    vpc_id: vpc-14d0977c
    instance_type: t2.medium

    # Tags applied to the instance that is *launched* to create the AMI
    run_tags:
        User: asommer
        Name: zfslockuptest-build
    run_volume_tags:
        User: asommer
        Name: zfslockuptest-build
    # Tags applied to the AMI and relevant snapshots
    tags:
        User: asommer
        Name: zfslockuptest

    security_group_ids:
      - 'sg-f2b72598'

    communicator: ssh
    ssh_username: packer
    ssh_private_key_file: ssh/id_rsa_zfslockuptest

    # Replace these with yours END

    user_data_file: 'tmp/userdata.sh'

    force_deregister: yes
    force_delete_snapshot: yes

    launch_block_device_mappings:
      - volume_type: gp2
        device_name: /dev/sdb
        delete_on_termination: yes
        volume_size: 10
    ami_root_device:
      source_device_name: /dev/sdb
      device_name: /dev/sda1
      delete_on_termination: yes
      volume_size: 16
      volume_type: gp2

    ami_description: 'ZFS lockup test'
    ami_groups: all
    ami_name: 'zfslockuptest'
    ami_virtualization_type: hvm
    associate_public_ip_address: no

  - type: qemu
    boot_command:
      - '<esc><wait><esc><wait><esc><wait><esc><wait><esc><wait><esc><wait><esc><wait><esc><wait><esc><wait><esc><wait5>'
      - '<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>'
      - 'boot -s<enter>'
      - '<wait10><wait10>'
      - '/bin/sh<enter><wait>'
      - 'mdmfs -s 10m md1 /tmp<enter><wait>'
      - 'dhclient -l /tmp/dhclient.lease.vtnet0 vtnet0<enter><wait5>'
      - 'fetch -o /tmp/installerconfig http://{{ .HTTPIP }}:{{ .HTTPPort }}/installerconfig_zfs<enter><wait5>'
      - 'bsdinstall script /tmp/installerconfig<enter>'
    # qemu time-to-boot-menu may be unpredictable depending on host speed, so we use a short delay here plus hammering
    # the ESC key in the `boot_command`
    boot_wait: 1s
    disk_cache: 'unsafe' # we want maximum speed (if one automated build crashes, nobody cares)
    disk_size: '10240'
    headless: false
    http_directory: './http'
    iso_checksum_type: '{{ user `iso_checksum_type` }}'
    iso_checksum_url: '{{ user `iso_checksum_url` }}'
    iso_url: '{{ user `iso_url` }}'
    output_directory: ./output-qemu
    qemuargs:
      - ['-m', '2048M']
      - ['-smp', 'cpus=2']
      # See https://www.packer.io/docs/builders/qemu.html
      - ['-netdev', 'user,hostfwd=tcp::{{ .SSHHostPort }}-:22,id=forward']
      - ['-device', 'virtio-net,netdev=forward,id=net0']
    shutdown_command: /sbin/poweroff
    shutdown_timeout: "12m" # jails may need very long to stop (ezjail stops them one after another)
    ssh_password: vagrant
    ssh_username: root
    ssh_wait_timeout: 1000s
    vm_name: 'zfslockuptest'

  - type: virtualbox-iso
    boot_command:
      - '<esc><wait>'
      - 'boot -s<enter>'
      - '<wait10><wait5>'
      - '/bin/sh<enter><wait>'
      - 'mdmfs -s 10m md1 /tmp<enter><wait>'
      - 'dhclient -l /tmp/dhclient.lease.vtnet0 vtnet0<enter><wait5>'
      - 'fetch -o /tmp/installerconfig http://{{ .HTTPIP }}:{{ .HTTPPort }}/installerconfig_zfs<enter><wait5>'
      - 'bsdinstall script /tmp/installerconfig<enter>'
    boot_wait: 10s
    disk_size: '10240'
    guest_additions_mode: disable
    guest_os_type: FreeBSD_64
    hard_drive_interface: sata
    headless: false
    http_directory: './http'
    iso_checksum_type: '{{ user `iso_checksum_type` }}'
    iso_checksum_url: '{{ user `iso_checksum_url` }}'
    iso_interface: sata
    iso_url: '{{ user `iso_url` }}'
    output_directory: ./output-virtualbox-iso
    shutdown_command: poweroff
    ssh_password: vagrant
    ssh_username: root
    ssh_wait_timeout: 1000s
    vboxmanage: [[
      "modifyvm", "{{ .Name }}",
      "--audio", "none",
      "--cpus", "2",
      "--memory", "2048",
      "--nictype1", "virtio",
    ], [
      "storagectl", "{{ .Name }}",
      "--name", "IDE Controller",
      "--remove"
    ]]
    vm_name: 'zfslockuptest'

  - type: vmware-iso
    boot_command:
      - '<esc><wait>'
      - 'boot -s<enter>'
      - '<wait10><wait10>'
      - '/bin/sh<enter><wait>'
      - 'mdmfs -s 10m md1 /tmp<enter><wait>'
      - 'dhclient -l /tmp/dhclient.lease.em0 em0<enter><wait5>'
      - 'fetch -o /tmp/installerconfig http://{{ .HTTPIP }}:{{ .HTTPPort }}/installerconfig_zfs<enter><wait5>'
      - 'bsdinstall script /tmp/installerconfig<enter>'
    boot_wait: 9s
    disk_size: '10240'
    guest_os_type: freebsd-64
    headless: false
    http_directory: './http'
    iso_checksum_type: '{{ user `iso_checksum_type` }}'
    iso_checksum_url: '{{ user `iso_checksum_url` }}'
    iso_url: '{{ user `iso_url` }}'

    output_directory: ./output-vmware-iso
    shutdown_command: poweroff
    ssh_password: vagrant
    ssh_username: root
    ssh_wait_timeout: 1000s
    vm_name: 'zfslockuptest'
    vmx_data:
      cpuid.coresPerSocket: '1'
      memsize: '2048'
      numvcpus: '2'

provisioners:
  # Start pf first so we can later adapt the config without losing the connection
  - type: shell
    execute_command: 'chmod +x {{ .Path }}; env {{ .Vars }} {{ .Path }}'
    expect_disconnect: yes
    scripts:
      - scripts/enable_pf.sh

  - type: shell
    execute_command: 'chmod +x {{ .Path }}; env {{ .Vars }} {{ .Path }}'
    only:
      - amazon-ebssurrogate
    scripts:
      - scripts/aws/install.sh

  - type: shell
    execute_command: 'chmod +x {{ .Path }}; env {{ .Vars }} {{ .Path }}'
    only:
      - qemu
      - virtualbox-iso
      - vmware-iso
    scripts:
      - scripts/all.sh

post-processors: []
